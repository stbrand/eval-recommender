from django.urls import path
from django.contrib.auth import views as auth_views
from . import views
from .views import *


app_name='recommender'
urlpatterns = [
    path('', views.home_view, name='home'),
    path('login/', auth_views.LoginView.as_view(template_name="recommender/login.html"), name='login'),
    path('logout/', auth_views.LogoutView.as_view(next_page="recommender:login"), name='logout'),
    path('register/', views.register, name='register'),
    path('users/', views.users_view, name='users_list'),
    path('online_users/', UserListView.as_view(), name='online_users_list'),
    path('generate_users/', views.generate_users, name='generate_users'),
    path('items/', views.items_view, name='items_list'),
    path('genres/', GenreListView.as_view(), name='genres_list'),
    path('create_genre/', GenreCreateView.as_view(), name='genre_create'),
    path('genres/<int:id>/', GenreDetailView.as_view(), name='genre_detail'),
    path('genres/<int:pk>/update/', GenreUpdateView.as_view(), name='genre_update'),
    path('genres/<int:pk>/delete/', GenreDeleteView.as_view(), name='genre_delete'),
    path('ratings/', views.ratings_view, name='ratings_list'),
    path('ratings_online_users/', views.ratings_online_users, name='ratings_online_users_list'),
    path('studies/', StudyListView.as_view(), name='studies_list'),
    path('new_study/', StudyCreateView.as_view(), name='study_create'),
    path('active_study/', views.study_active_view, name='study_active'),
    path('studies/<int:id>/', StudyDetailView.as_view(), name='study_detail'),
    path('studies/<int:pk>/update/', StudyUpdateView.as_view(), name='study_update'),
    path('studies/<int:pk>/delete/', StudyDeleteView.as_view(), name='study_delete'),
    path('datasets/', DatasetListView.as_view(), name='datasets_list'),
    path('create_dataset/', DatasetCreateView.as_view(), name='dataset_create'),
    path('datasets/<int:id>/', DatasetDetailView.as_view(), name='dataset_detail'),
    path('datasets/<int:pk>/update/', DatasetUpdateView.as_view(), name='dataset_update'),
    path('datasets/<int:pk>/delete/', DatasetDeleteView.as_view(), name='dataset_delete'),
    path('uploads/', views.upload_central, name='upload_central'),
    path('movie_upload/', views.movie_upload, name='movie_upload'),
    path('rating_upload/', views.rating_upload, name='rating_upload'),
    path('link_upload/', views.link_upload, name='link_upload'),
    path('movie_upload_100K/', views.movie_upload_100K, name='movie_upload_100K'),
    path('rating_upload_100K/', views.rating_upload_100K, name='rating_upload_100K'),
    path('movie_upload_1M_10M/', views.movie_upload_1M_10M, name='movie_upload_1M_10M'),
    path('rating_upload_1M_10M/', views.rating_upload_1M_10M, name='rating_upload_1M_10M'),
    path('surprise_crossvalidate/', views.surprise_crossvalidate, name='surprise_crossvalidate'),
    path('crossvalidations_table/', views.crossvalidations_table_view, name='crossvalidations_table'),
    path('surprise_reclists/', views.surprise_predict, name='surprise_predict'),
    path('existing_reclists/', views.reclists_existing, name='reclists_existing'),
    path('all_reclists/', ReclistListView.as_view(), name='reclists_all'),
    path('reclists/', views.reclist_view, name='reclists'),
    path('reclists/<int:pk>/', ReclistDetailView.as_view(), name='reclist_detail'),
    path('evaluations/', EvaluationListView.as_view(), name='evaluations_list'),
    path('evaluations_table/', views.evaluations_table_view, name='evaluations_table'),
    path('evaluations/<int:id>/', EvaluationDetailView.as_view(), name='evaluation_detail'),
    path('algorithms/', AlgorithmListView.as_view(), name='algorithms_list'),
    path('create_algorithm/', AlgorithmCreateView.as_view(), name='algo_create'),
    path('algorithms/<int:id>/', AlgorithmDetailView.as_view(), name='algo_detail'),
    path('algorithms/<int:pk>/update/', AlgorithmUpdateView.as_view(), name='algo_update'),
    path('algorithms/<int:pk>/delete/', AlgorithmDeleteView.as_view(), name='algo_delete'),
    path('tokens/', TokenListView.as_view(), name='tokens_list'),
    path('generate_tokens/', views.generate_tokens, name='generate_token'),
    path('create_token/', TokenCreateView.as_view(), name='create_token'),
    path('create_tokens/', views.create_tokens, name='create_tokens'),
    path('tokens/<int:id>/', TokenDetailView.as_view(), name='token_detail'),
    path('tokens/<int:pk>/delete/', TokenDeleteView.as_view(), name='token_delete'),
]
