# Generated by Django 3.0.3 on 2020-05-22 19:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('recommender', '0004_auto_20200521_1932'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('size', models.PositiveIntegerField()),
                ('category', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('utility', models.DecimalField(decimal_places=2, max_digits=10)),
                ('serendipity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('novelty', models.DecimalField(decimal_places=2, max_digits=10)),
                ('diversity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unexpectedness', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('imdb_id', models.PositiveIntegerField()),
                ('dataset_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommender.Dataset')),
            ],
        ),
        migrations.CreateModel(
            name='MovieGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=2, max_digits=10)),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommender.Item')),
            ],
        ),
        migrations.CreateModel(
            name='Reclist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('length', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ReclistItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField()),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reclist_items', to='recommender.Item')),
                ('reclist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reclist_items', to='recommender.Reclist')),
            ],
            options={
                'ordering': ('number',),
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=200, null=True)),
                ('account', models.CharField(max_length=200, null=True, unique=True)),
                ('token', models.CharField(max_length=50, null=True)),
                ('online_user', models.BooleanField(default=False)),
                ('dataset_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommender.Dataset')),
            ],
        ),
        migrations.DeleteModel(
            name='Genre2',
        ),
        migrations.AddField(
            model_name='algorithm',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='algorithm',
            name='name',
            field=models.CharField(max_length=100, unique=True),
        ),
        migrations.AddField(
            model_name='reclist',
            name='algo_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommender.Algorithm'),
        ),
        migrations.AddField(
            model_name='reclist',
            name='items',
            field=models.ManyToManyField(related_name='reclists', through='recommender.ReclistItem', to='recommender.Item'),
        ),
        migrations.AddField(
            model_name='reclist',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommender.User'),
        ),
        migrations.AddField(
            model_name='rating',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommender.User'),
        ),
        migrations.AddField(
            model_name='item',
            name='genres',
            field=models.ManyToManyField(related_name='items', to='recommender.MovieGenre'),
        ),
        migrations.AddField(
            model_name='evaluation',
            name='reclist_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommender.Reclist'),
        ),
        migrations.AddField(
            model_name='evaluation',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommender.User'),
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.UniqueConstraint(fields=('user_id', 'dataset_id'), name='unique_user_ds'),
        ),
        migrations.AddConstraint(
            model_name='reclist',
            constraint=models.UniqueConstraint(fields=('user_id', 'algo_id', 'length'), name='unique_recl_user'),
        ),
        migrations.AddConstraint(
            model_name='rating',
            constraint=models.UniqueConstraint(fields=('user_id', 'item_id'), name='unique_rating'),
        ),
        migrations.AddConstraint(
            model_name='item',
            constraint=models.UniqueConstraint(fields=('name', 'dataset_id'), name='unique_item_ds'),
        ),
        migrations.AddConstraint(
            model_name='evaluation',
            constraint=models.UniqueConstraint(fields=('reclist_id', 'user_id'), name='unique_eval_user'),
        ),
    ]
